{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anndecamp/Desktop/db_proj/react_app/client/src/FullBar.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar FullBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FullBar, _Component);\n\n  function FullBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FullBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FullBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      bars: []\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/bars');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(FullBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          bars: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Bar\"), React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Markup\"), React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Phone Number\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.bars.map(function (bar) {\n        return React.createElement(\"tr\", {\n          key: bar.Bar,\n          className: \"tr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, bar.Bar), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, bar.Markup, \" \"), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, bar.Address), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, bar.City), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, bar.State), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, bar.Phone_Number));\n      }))));\n    }\n  }]);\n\n  return FullBar;\n}(Component);\n\nexport default FullBar;","map":{"version":3,"sources":["/Users/anndecamp/Desktop/db_proj/react_app/client/src/FullBar.js"],"names":["React","Component","NavLink","FullBar","state","bars","callBackendAPI","fetch","response","json","body","status","Error","message","then","res","setState","catch","err","console","log","map","bar","Bar","Markup","Address","City","State","Phone_Number"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,OAAO,WAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;UAWRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,CAAC,OAAD,CADb;;AAAA;AACTC,cAAAA,QADS;AAAA;AAAA,qBAEIA,QAAQ,CAACC,IAAT,EAFJ;;AAAA;AAETC,cAAAA,IAFS;;AAAA,oBAIXF,QAAQ,CAACG,MAAT,KAAoB,GAJT;AAAA;AAAA;AAAA;;AAAA,oBAKPC,KAAK,CAACF,IAAI,CAACG,OAAN,CALE;;AAAA;AAAA,+CAQRH,IARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAPI;AAAA;;AACnB;AACA,WAAKJ,cAAL,GACGQ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,IAAI,EAAEU;AAAR,SAAd,CAAJ;AAAA,OADX,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K,CACD;;;;6BAYU;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAG,CAACC,GAAb;AAAkB,UAAA,SAAS,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,GAAG,CAACC,GAAxB,CADF,EAEE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,GAAG,CAACE,MAAxB,MAFF,EAGE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBF,GAAG,CAACG,OAAxB,CAHF,EAIE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBH,GAAG,CAACI,IAAxB,CAJF,EAKE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBJ,GAAG,CAACK,KAAxB,CALF,EAME;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBL,GAAG,CAACM,YAAxB,CANF,CADsB;AAAA,OAAvB,CADH,CAXF,CADF,CADF;AA4BD;;;;EApDmB3B,S;;AAuDtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport logo from './logo.svg'\nimport './App.css'\n\nclass FullBar extends Component {\n  state = {\n    bars: []\n  }\n\n  componentDidMount () {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ bars: res }))\n      .catch(err => console.log(err))\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/bars')\n    const body = await response.json()\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n\n    return body\n  }\n\n  render () {\n    return (\n      <div>\n        <table className='table'>\n          <thead>\n            <tr className='tr'>\n              <th className='th'>Bar</th>\n              <th className='th'>Markup</th>\n              <th className='th'>Address</th>\n              <th className='th'>City</th>\n              <th className='th'>State</th>\n              <th className='th'>Phone Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.bars.map(bar => (\n              <tr key={bar.Bar} className='tr'>\n                <td className='td'>{bar.Bar}</td>\n                <td className='td'>{bar.Markup} </td>\n                <td className='td'>{bar.Address}</td>\n                <td className='td'>{bar.City}</td>\n                <td className='td'>{bar.State}</td>\n                <td className='td'>{bar.Phone_Number}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default FullBar\n"]},"metadata":{},"sourceType":"module"}