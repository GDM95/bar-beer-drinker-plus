{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anndecamp/Desktop/db_proj/react_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anndecamp/Desktop/db_proj/react_app/client/src/Drinker.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar Drinker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Drinker, _Component);\n\n  function Drinker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Drinker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Drinker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      transactions: []\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/transactions');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Drinker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          transactions: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"match.params.name\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Transaction\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.transactions.map(function (transaction) {\n        return React.createElement(\"tr\", {\n          key: transaction.Id,\n          className: \"tr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, transaction.Time), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, transaction.Total), React.createElement(\"td\", {\n          className: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, transaction.Bar));\n      }))));\n    }\n  }]);\n\n  return Drinker;\n}(Component);\n\nexport default Drinker;","map":{"version":3,"sources":["/Users/anndecamp/Desktop/db_proj/react_app/client/src/Drinker.js"],"names":["React","Component","NavLink","Drinker","state","transactions","callBackendAPI","fetch","response","json","body","status","Error","message","then","res","setState","catch","err","console","log","map","transaction","Id","Time","Total","Bar"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,OAAO,WAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;UAWRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,CAAC,eAAD,CADb;;AAAA;AACTC,cAAAA,QADS;AAAA;AAAA,qBAEIA,QAAQ,CAACC,IAAT,EAFJ;;AAAA;AAETC,cAAAA,IAFS;;AAAA,oBAIXF,QAAQ,CAACG,MAAT,KAAoB,GAJT;AAAA;AAAA;AAAA;;AAAA,oBAKPC,KAAK,CAACF,IAAI,CAACG,OAAN,CALE;;AAAA;AAAA,+CAQRH,IARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAPI;AAAA;;AACnB;AACA,WAAKJ,cAAL,GACGQ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,YAAY,EAAEU;AAAhB,SAAd,CAAJ;AAAA,OADX,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K,CACD;;;;6BAYU;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWC,YAAX,CAAwBgB,GAAxB,CAA4B,UAAAC,WAAW;AAAA,eACtC;AAAI,UAAA,GAAG,EAAEA,WAAW,CAACC,EAArB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,WAAW,CAACE,IAAhC,CADF,EAEE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBF,WAAW,CAACG,KAAhC,CAFF,EAGE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBH,WAAW,CAACI,GAAhC,CAHF,CADsC;AAAA,OAAvC,CADH,CANF,CAFF,CADF;AAqBD;;;;EA7CmBzB,S;;AAgDtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport logo from './logo.svg'\nimport './App.css'\n\nclass Drinker extends Component {\n  state = {\n    transactions: []\n  }\n\n  componentDidMount () {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ transactions: res }))\n      .catch(err => console.log(err))\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/transactions')\n    const body = await response.json()\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n\n    return body\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>match.params.name</h1>\n        <table className='table'>\n          <thead>\n            <tr className='tr'>\n              <th className='th'>Transaction</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.transactions.map(transaction => (\n              <tr key={transaction.Id} className='tr'>\n                <td className='td'>{transaction.Time}</td>\n                <td className='td'>{transaction.Total}</td>\n                <td className='td'>{transaction.Bar}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Drinker\n"]},"metadata":{},"sourceType":"module"}